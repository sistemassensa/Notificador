'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace WSSiemens
    
    'CODEGEN: No se controló el elemento de extensión WSDL opcional 'PolicyReference' del espacio de nombres 'http://schemas.xmlsoap.org/ws/2004/09/policy'.
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="BasicHttpsBinding_IServiceCDIN", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Service1
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private RegisterPartnerInventoryTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegisterPartnerSalesTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SES_Notificador.My.MySettings.Default.SES_Notificador_WSSiemens_Service1
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event RegisterPartnerInventoryTCompleted As RegisterPartnerInventoryTCompletedEventHandler
        
        '''<remarks/>
        Public Event RegisterPartnerSalesTCompleted As RegisterPartnerSalesTCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceCDIN/RegisterPartnerInventoryT", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegisterPartnerInventoryT(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal CustomerNumberSAP As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal DataJsonEncripted() As Byte) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> MessagesResult
            Dim results() As Object = Me.Invoke("RegisterPartnerInventoryT", New Object() {CustomerNumberSAP, DataJsonEncripted})
            Return CType(results(0),MessagesResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegisterPartnerInventoryTAsync(ByVal CustomerNumberSAP As String, ByVal DataJsonEncripted() As Byte)
            Me.RegisterPartnerInventoryTAsync(CustomerNumberSAP, DataJsonEncripted, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegisterPartnerInventoryTAsync(ByVal CustomerNumberSAP As String, ByVal DataJsonEncripted() As Byte, ByVal userState As Object)
            If (Me.RegisterPartnerInventoryTOperationCompleted Is Nothing) Then
                Me.RegisterPartnerInventoryTOperationCompleted = AddressOf Me.OnRegisterPartnerInventoryTOperationCompleted
            End If
            Me.InvokeAsync("RegisterPartnerInventoryT", New Object() {CustomerNumberSAP, DataJsonEncripted}, Me.RegisterPartnerInventoryTOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegisterPartnerInventoryTOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegisterPartnerInventoryTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegisterPartnerInventoryTCompleted(Me, New RegisterPartnerInventoryTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IServiceCDIN/RegisterPartnerSalesT", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegisterPartnerSalesT(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal CustomerNumberSAP As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary", IsNullable:=true)> ByVal DataJsonEncripted() As Byte) As <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> MessagesResult
            Dim results() As Object = Me.Invoke("RegisterPartnerSalesT", New Object() {CustomerNumberSAP, DataJsonEncripted})
            Return CType(results(0),MessagesResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegisterPartnerSalesTAsync(ByVal CustomerNumberSAP As String, ByVal DataJsonEncripted() As Byte)
            Me.RegisterPartnerSalesTAsync(CustomerNumberSAP, DataJsonEncripted, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegisterPartnerSalesTAsync(ByVal CustomerNumberSAP As String, ByVal DataJsonEncripted() As Byte, ByVal userState As Object)
            If (Me.RegisterPartnerSalesTOperationCompleted Is Nothing) Then
                Me.RegisterPartnerSalesTOperationCompleted = AddressOf Me.OnRegisterPartnerSalesTOperationCompleted
            End If
            Me.InvokeAsync("RegisterPartnerSalesT", New Object() {CustomerNumberSAP, DataJsonEncripted}, Me.RegisterPartnerSalesTOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegisterPartnerSalesTOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegisterPartnerSalesTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegisterPartnerSalesTCompleted(Me, New RegisterPartnerSalesTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.datacontract.org/2004/07/Siemens.SCM.CDIN.WCF")>  _
    Partial Public Class MessagesResult
        
        Private messageField As String
        
        Private processEstatusField As String
        
        Private messageField1 As String
        
        Private proceessstatusField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Overloads Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ProcessEstatus() As String
            Get
                Return Me.processEstatusField
            End Get
            Set
                Me.processEstatusField = value
            End Set
        End Property

        ''''<remarks/>
        '<System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)>
        'Public Overloads Property Message1() As String
        '    Get
        '        Return Me.messageField1
        '    End Get
        '    Set
        '        Me.messageField1 = Value
        '    End Set
        'End Property

        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property proceessstatus() As String
            Get
                Return Me.proceessstatusField
            End Get
            Set
                Me.proceessstatusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub RegisterPartnerInventoryTCompletedEventHandler(ByVal sender As Object, ByVal e As RegisterPartnerInventoryTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegisterPartnerInventoryTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MessagesResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MessagesResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub RegisterPartnerSalesTCompletedEventHandler(ByVal sender As Object, ByVal e As RegisterPartnerSalesTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegisterPartnerSalesTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MessagesResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MessagesResult)
            End Get
        End Property
    End Class
End Namespace
